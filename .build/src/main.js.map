{
  "version": 3,
  "sources": ["../../src/main.ts"],
  "sourcesContent": ["import {\n    Client,\n    GatewayIntentBits\n} from 'discord.js';\nimport express from \"express\"\nimport * as dotenv from \"dotenv\";\nimport { MessageHandler } from './message/message';\nimport { CommandInteractionHandler } from './commands/interaction';\nimport { ButtonInteractionHandler } from './buttons/buttons';\n\ndotenv.config({ path: __dirname+ '/../.env' })\n\nconst PORT = process.env.PORT || 3000;\nconst PREFIX = process.env.PREFIX || \"-\";\n\nconst server = express()\n\nconst client = new Client({ intents: [\n    GatewayIntentBits.Guilds,\n    GatewayIntentBits.GuildMessages,\n    GatewayIntentBits.MessageContent\n] });\n\nclient.on('ready', () => {\n    console.log(`Logged in as ${client.user.tag}!`);\n});\n\nclient.on('interactionCreate', async interaction => {\n    if(interaction.isChatInputCommand()){\n        //Commands Handler\n        const commandHandler = new CommandInteractionHandler(interaction, client)\n        let command = commandHandler[interaction.commandName.toLowerCase()]\n        if(command){\n            command = command.bind(commandHandler)\n            try {\n                command();\n            }catch(err){ console.log(err) }\n        }\n        return;\n    }\n    if(interaction.isButton()){\n        //Button Handler\n\n        let args = interaction.customId.toLowerCase().split(\"_\");\n        if(!args.length){ return }\n\n        const actionName = args.shift();\n\n        const buttonHandler = new ButtonInteractionHandler(interaction, args, client)\n\n        let action = buttonHandler[actionName]\n        if(action){\n            action = action.bind(buttonHandler)\n            try {\n                action();\n                return;\n            }catch(err){ console.log(err) }\n        }\n        return;\n    }\n    if(interaction.isAnySelectMenu()){\n        //Dropdown Handler\n        return;\n    }\n});\n\n\nclient.on(\"messageCreate\", message => {\n    if(message.author.bot){ return }\n    if(!message.guild){ return }\n    if(!message.content){ return }\n\n    if(message.content.startsWith(PREFIX)){\n        let args = message.content.substring(PREFIX.length).toLowerCase().split(\" \");\n        if(!args.length){ return }\n        let commandName = args.shift();\n        if(!commandName){ return }\n\n        const commandHandler = new MessageHandler(message, args, client);\n\n        let command = commandHandler[commandName];\n        if(command){\n            command = command.bind(commandHandler);\n            try {\n                command();\n                return;\n            } catch (err){ console.log(err) }\n        }\n    }\n})\n\nclient.login(process.env.BOT_TOKEN || \"\");\n\nserver.get('/', (req, res) => {\n    res.send('Online')\n})\n\nserver.listen(PORT, () => {\n    console.log(`Server Online on PORT ${PORT}`)\n})"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA,qBAGO;AACP,qBAAoB;AACpB,aAAwB;AACxB,qBAA+B;AAC/B,yBAA0C;AAC1C,qBAAyC;AAEzC,OAAO,OAAO,EAAE,MAAM,YAAW,WAAW,CAAC;AAE7C,MAAM,OAAO,QAAQ,IAAI,QAAQ;AACjC,MAAM,SAAS,QAAQ,IAAI,UAAU;AAErC,MAAM,aAAS,eAAAA,SAAQ;AAEvB,MAAM,SAAS,IAAI,sBAAO,EAAE,SAAS;AAAA,EACjC,iCAAkB;AAAA,EAClB,iCAAkB;AAAA,EAClB,iCAAkB;AACtB,EAAE,CAAC;AAEH,OAAO,GAAG,SAAS,MAAM;AACrB,UAAQ,IAAI,gBAAgB,OAAO,KAAK,MAAM;AAClD,CAAC;AAED,OAAO,GAAG,qBAAqB,OAAM,gBAAe;AAChD,MAAG,YAAY,mBAAmB,GAAE;AAEhC,UAAM,iBAAiB,IAAI,6CAA0B,aAAa,MAAM;AACxE,QAAI,UAAU,eAAe,YAAY,YAAY,YAAY;AACjE,QAAG,SAAQ;AACP,gBAAU,QAAQ,KAAK,cAAc;AACrC,UAAI;AACA,gBAAQ;AAAA,MACZ,SAAO,KAAN;AAAY,gBAAQ,IAAI,GAAG;AAAA,MAAE;AAAA,IAClC;AACA;AAAA,EACJ;AACA,MAAG,YAAY,SAAS,GAAE;AAGtB,QAAI,OAAO,YAAY,SAAS,YAAY,EAAE,MAAM,GAAG;AACvD,QAAG,CAAC,KAAK,QAAO;AAAE;AAAA,IAAO;AAEzB,UAAM,aAAa,KAAK,MAAM;AAE9B,UAAM,gBAAgB,IAAI,wCAAyB,aAAa,MAAM,MAAM;AAE5E,QAAI,SAAS,cAAc;AAC3B,QAAG,QAAO;AACN,eAAS,OAAO,KAAK,aAAa;AAClC,UAAI;AACA,eAAO;AACP;AAAA,MACJ,SAAO,KAAN;AAAY,gBAAQ,IAAI,GAAG;AAAA,MAAE;AAAA,IAClC;AACA;AAAA,EACJ;AACA,MAAG,YAAY,gBAAgB,GAAE;AAE7B;AAAA,EACJ;AACJ,CAAC;AAGD,OAAO,GAAG,iBAAiB,aAAW;AAClC,MAAG,QAAQ,OAAO,KAAI;AAAE;AAAA,EAAO;AAC/B,MAAG,CAAC,QAAQ,OAAM;AAAE;AAAA,EAAO;AAC3B,MAAG,CAAC,QAAQ,SAAQ;AAAE;AAAA,EAAO;AAE7B,MAAG,QAAQ,QAAQ,WAAW,MAAM,GAAE;AAClC,QAAI,OAAO,QAAQ,QAAQ,UAAU,OAAO,MAAM,EAAE,YAAY,EAAE,MAAM,GAAG;AAC3E,QAAG,CAAC,KAAK,QAAO;AAAE;AAAA,IAAO;AACzB,QAAI,cAAc,KAAK,MAAM;AAC7B,QAAG,CAAC,aAAY;AAAE;AAAA,IAAO;AAEzB,UAAM,iBAAiB,IAAI,8BAAe,SAAS,MAAM,MAAM;AAE/D,QAAI,UAAU,eAAe;AAC7B,QAAG,SAAQ;AACP,gBAAU,QAAQ,KAAK,cAAc;AACrC,UAAI;AACA,gBAAQ;AACR;AAAA,MACJ,SAAS,KAAP;AAAa,gBAAQ,IAAI,GAAG;AAAA,MAAE;AAAA,IACpC;AAAA,EACJ;AACJ,CAAC;AAED,OAAO,MAAM,QAAQ,IAAI,aAAa,EAAE;AAExC,OAAO,IAAI,KAAK,CAAC,KAAK,QAAQ;AAC1B,MAAI,KAAK,QAAQ;AACrB,CAAC;AAED,OAAO,OAAO,MAAM,MAAM;AACtB,UAAQ,IAAI,yBAAyB,MAAM;AAC/C,CAAC;",
  "names": ["express"]
}
